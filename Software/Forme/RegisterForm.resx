<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureboxPassVisible.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="helpProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>102</value>
  </metadata>
</root>